{"version":3,"sources":["components/layout/musicKey.svg","components/layout/cities.png","components/game/playButtonConture.svg","components/layout/Header.jsx","components/layout/MusicKey.jsx","components/layout/Footer.jsx","components/game/score/Score.jsx","components/game/track/Track.jsx","components/game/playlist/Playlist.jsx","components/game/answer/Answer.jsx","components/game/paste-text/PasteText.jsx","components/game/audio-recorder/AudioRecorder.jsx","components/game/Game.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","MusicKey","props","musicKey","TweenMax","fromTo","this","from","to","opacity","repeat","ref","div","src","alt","Component","Footer","cities","rotation","x","y","delay","repeatDelay","Score","first","second","Track","title","scrolling","frameborder","allowTransparency","id","width","height","Playlist","tracks","length","hidden","map","trackId","key","Answer","onCorrectAnswer","bind","onIncorrectAnswer","lyric","track_id","onClick","isLast","answer","message","foundTrack","song_name","notFoundTrack","PasteText","onLyricChange","state","loader","event","setState","target","value","goClick","then","onChange","type","color","timeout","visible","AudioRecorder","status","blob","goBtn","audioSrc","audioProps","audioType","startCallback","e","pauseCallback","stopCallback","window","URL","createObjectURL","controlAudio","baseUrl","Game","circleButton","circleButtonConture","mouseEnter","mouseLeave","onPlayClick","onPasteTextClick","onSingSongClick","onGuessByTextClick","onGuessBySingClick","numberOfAttempt","isAudioMode","record","showPlayButton","showSingOrPasteButtons","showTextArea","computerPoints","userPoints","showAnswer","lyricResponce","attempt","textareaMessage","showListOfSongs","showAudio","TweenLite","scale","axios","post","catch","error","console","log","song","data","push","formData","FormData","file","File","append","headers","TimelineMax","transformOrigin","ease","Power0","easeNone","isLastAttempt","onMouseEnter","onMouseLeave","playButtonConture","img","App","style","backgroundColor","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b13a6b49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/musicKey.0df35fa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/cities.156adf41.png\";","module.exports = __webpack_public_path__ + \"static/media/playButtonConture.33b6e009.svg\";","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"description-section\">\r\n        <div className=\"mText\">\r\n          <p className=\"gMusic\">music akinator</p>\r\n          <p className=\"teamPresent\">by FFT team</p>\r\n        </div>\r\n        <div className=\"buttomLine\"></div>\r\n      </div>\r\n      <div className=\"rules-section\">\r\n        <div className=\"text\">\r\n          <p>We bring you in the game</p>\r\n          <p>you need to make a song, then choose one of the options: </p>\r\n          <p>enter the lyrics of the song</p>\r\n          <p>sing it or include it in someone’s performance</p>\r\n          <p>program tries to guess your chosen song</p>\r\n          <p>in order to start playing click play </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport TweenMax from \"gsap\";\r\nimport musicKey from \"./musicKey.svg\";\r\n\r\nclass MusicKey extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.musicKey = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    TweenMax.fromTo(this.musicKey, 3, this.props.from, {\r\n      ...this.props.to,\r\n      opacity: 0,\r\n      repeat: -1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={div => (this.musicKey = div)}>\r\n        <img src={musicKey} alt=\"Music key image\"></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MusicKey;\r\n","import React, { Component } from \"react\";\r\nimport MusicKey from \"./MusicKey\";\r\nimport \"./Footer.css\";\r\nimport cities from \"./cities.png\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"imgBack\">\r\n          <img src={cities} />\r\n        </div>\r\n        <div className=\"music-Keys\">\r\n          <MusicKey\r\n            from={{ rotation: -15, x: -10 }}\r\n            to={{ rotation: 20, y: -150, x: -25, delay: 0.5, repeatDelay: 0.5 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: 20, x: -10 }}\r\n            to={{ rotation: -30, y: -160, x: 50, delay: 0.2, repeatDelay: 0.8 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -20, x: -10 }}\r\n            to={{ rotation: 30, y: -200, x: 20, delay: 0.5, repeatDelay: 1 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -20, x: 10 }}\r\n            to={{ rotation: 30, y: -140, x: 20, delay: 0.4, repeatDelay: 0.4 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -15, x: -10 }}\r\n            to={{ rotation: 20, y: -150, x: -25, delay: 0.5, repeatDelay: 0.6 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: 20, x: -10 }}\r\n            to={{ rotation: -30, y: -120, x: 50, delay: 0.7, repeatDelay: 0.7 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -20, x: -10 }}\r\n            to={{ rotation: 30, y: -130, x: 20, delay: 0.5, repeatDelay: 1 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -15, x: 10 }}\r\n            to={{ rotation: 20, y: -140, x: -25, delay: 0.9, repeatDelay: 1 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: 20, x: -10 }}\r\n            to={{ rotation: -30, y: -170, x: 50, delay: 0.5, repeatDelay: 0.9 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -20, x: -10 }}\r\n            to={{ rotation: 30, y: -180, x: 20, delay: 0.4, repeatDelay: 1 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -20, x: 10 }}\r\n            to={{ rotation: 30, y: -160, x: 20, delay: 0.5, repeatDelay: 0.4 }}\r\n          />\r\n          <MusicKey\r\n            from={{ rotation: -20, x: -10 }}\r\n            to={{ rotation: 30, y: -180, x: 20, delay: 0.1, repeatDelay: 1 }}\r\n          />\r\n        </div>\r\n        <div className=\"author\">\r\n          <p>By Four From Telegram</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport \"./Score.css\";\r\n\r\nclass Score extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"score\">\r\n        <div className=\"cell\">\r\n          <span>yours</span>\r\n          <span>{this.props.first}</span>\r\n        </div>\r\n        <div className=\"cell\">\r\n          <span>my</span>\r\n          <span>{this.props.second}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","import React, { Component } from \"react\";\r\nimport './Track.css';\r\n\r\nclass Track extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"frame-container\">\r\n        <iframe title=\"track\" scrolling=\"no\" frameborder=\"0\" allowTransparency=\"true\" src={`https://www.deezer.com/plugins/player?format=classic&autoplay=false&playlist=true&width=700&height=350&color=ff0000&layout=&size=medium&type=tracks&id=${this.props.id}`} width=\"70%\" height=\"90px\"></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;\r\n","import React, { Component } from \"react\";\r\nimport Track from '../track/Track'\r\nimport './Playlist.css'\r\n\r\nclass Playlist extends Component {\r\n    render() {\r\n        if (this.props.tracks.length === 0)\r\n            return (<></>);\r\n\r\n        return (\r\n            <div className={this.props.hidden}>\r\n                <p className=\"title\">Songs in this game:</p>\r\n                {this.props.tracks.map(trackId => {\r\n                    return <Track id={trackId} key={trackId} />\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Playlist;\r\n","import React, { Component } from \"react\";\r\nimport Track from \"../track/Track\";\r\nimport './Answer.css';\r\n\r\nclass Answer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onCorrectAnswer = this.onCorrectAnswer.bind(this);\r\n        this.onIncorrectAnswer = this.onIncorrectAnswer.bind(this);\r\n    }\r\n\r\n    onIncorrectAnswer() {\r\n        this.props.onIncorrectAnswer();\r\n    }\r\n\r\n    onCorrectAnswer() {\r\n        this.props.onCorrectAnswer();\r\n    }\r\n\r\n    foundTrack() {\r\n        const answer = (\r\n            <div>\r\n                <Track id={this.props.lyric.track_id} />\r\n                <div className=\"check-div\">\r\n                    <p>Am I corect?</p>\r\n                    <button className=\"yes-btn\" onClick={this.onCorrectAnswer}>\r\n                        YES\r\n                        </button>\r\n                    <button className=\"no-btn\" onClick={this.onIncorrectAnswer}>\r\n                        NO\r\n                    </button>\r\n                </div>\r\n            </div>);\r\n        return answer;\r\n    }\r\n\r\n    notFoundTrack(isLast) {\r\n        const answer = (\r\n            <div className=\"try-again-container\">\r\n                <button className=\"try-again-btn\" onClick={this.onIncorrectAnswer}>\r\n                    {isLast ? 'GAME OVER' : 'TRY AGAIN'}\r\n                </button>\r\n            </div>);\r\n        return answer;\r\n    }\r\n\r\n    render() {\r\n        let answer;\r\n        let message;\r\n        if (this.props.lyric) {\r\n            answer = this.foundTrack();\r\n            message = `You have wished a song: ${this.props.lyric?.song_name}`;\r\n        } else {\r\n            answer = this.notFoundTrack(this.props.isLast);\r\n            message = \"Sorry, I couldn't get your song\";\r\n        }\r\n\r\n        return (\r\n            <div className={this.props.hidden}>\r\n                <div className=\"answer\">\r\n                    <div>\r\n                        <p className=\"answer-name\">\r\n                            {message}\r\n                        </p>\r\n                    </div>\r\n                    {answer}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Answer;\r\n","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport './PasteText.css';\r\n\r\nclass PasteText extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onLyricChange = this.onLyricChange.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = { lyric: '', loader: false };\r\n    }\r\n\r\n    onLyricChange(event) {\r\n        this.setState({ lyric: event.target.value });\r\n    }\r\n    onClick() {\r\n        this.setState({ lyric: '', loader: true });\r\n        this.props.goClick(this.state.lyric)\r\n            .then(() => {\r\n                this.setState({ loader: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const hidden = this.state.loader ? 'hidden' : '';\r\n        return (\r\n            <div className={this.props.hidden + \" paste-text\"} >\r\n                <div className={hidden}>\r\n                    <p>{this.props.message}</p>\r\n                    <textarea\r\n                        value={this.state.lyric}\r\n                        onChange={this.onLyricChange}>\r\n                    </textarea>\r\n                    <button className=\"go-btn\" onClick={this.onClick}>\r\n                        Go\r\n                    </button>\r\n                </div>\r\n                <Loader\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={0}\r\n                    visible={this.state.loader}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PasteText;\r\n","import React, { Component } from \"react\";\r\nimport \"./AudioRecorder.css\";\r\nimport AudioAnalyser from \"react-audio-analyser\"\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\nexport default class AudioRecorder extends Component {\r\n    constructor(props) {\r\n\r\n        super(props)\r\n        this.onClick = this.onClick.bind(this);\r\n        this.state = {\r\n            status: null,\r\n            blob: null,\r\n            loader: false,\r\n            goBtn: \"go-btn hidden\"\r\n        }\r\n    }\r\n\r\n    controlAudio(status) {\r\n        this.setState({\r\n            status\r\n        })\r\n    }\r\n\r\n    onClick() {\r\n        this.setState({ loader: true });\r\n        this.props.goClick(this.state.blob)\r\n            .then(() => {\r\n                this.setState({ loader: false, audioSrc: null });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { status, audioSrc } = this.state;\r\n        const audioProps = {\r\n            audioType: \"audio/mp3\",\r\n            status,\r\n            audioSrc,\r\n            startCallback: (e) => {\r\n                // console.log(\"succ start\", e);\r\n                this.setState({\r\n                    goBtn: \"go-btn hidden\"\r\n                });\r\n            },\r\n            pauseCallback: (e) => {\r\n                // console.log(\"succ pause\", e);\r\n            },\r\n            stopCallback: (e) => {\r\n                this.setState({\r\n                    audioSrc: window.URL.createObjectURL(e),\r\n                    blob: e,\r\n                    goBtn: \"go-btn\"\r\n                })\r\n                // console.log(\"succ stop\", e)\r\n            }\r\n        }\r\n        const hidden = this.state.loader ? 'hidden' : '';\r\n\r\n        return (\r\n            <div className={this.props.hidden + \" paste-text\"}>\r\n                <div className={hidden}>\r\n                    <AudioAnalyser {...audioProps}>\r\n                        <div className=\"btn-box\">\r\n                            {status !== \"recording\" &&\r\n                                <i className=\"iconfont icon-start\" title=\"Start\"\r\n                                    onClick={() => this.controlAudio(\"recording\")}></i>}\r\n                            {status === \"recording\" &&\r\n                                <i className=\"iconfont icon-pause\" title=\"Pause\"\r\n                                    onClick={() => this.controlAudio(\"paused\")}></i>}\r\n                            <i className=\"iconfont icon-stop\" title=\"Stop\"\r\n                                onClick={() => this.controlAudio(\"inactive\")}></i>\r\n                        </div>\r\n                    </AudioAnalyser>\r\n                    <button className={this.state.goBtn} onClick={this.onClick}>\r\n                        Go\r\n                        </button>\r\n                </div>\r\n                <Loader\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={0}\r\n                    visible={this.state.loader}\r\n                />\r\n            </ div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TimelineMax, TweenLite, Power0 } from \"gsap\";\r\n\r\nimport Score from \"./score/Score\";\r\nimport Playlist from \"./playlist/Playlist\";\r\nimport Answer from \"./answer/Answer\";\r\nimport PasteText from \"./paste-text/PasteText\";\r\nimport AudioRecorder from \"./audio-recorder/AudioRecorder\";\r\nimport \"./Game.css\";\r\n\r\nimport playButtonConture from \"./playButtonConture.svg\";\r\n\r\n\r\nconst baseUrl = \"https://40.68.148.215/\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.circleButton = null;\r\n    this.circleButtonConture = null;\r\n\r\n    this.mouseEnter = this.mouseEnter.bind(this);\r\n    this.mouseLeave = this.mouseLeave.bind(this);\r\n    this.onPlayClick = this.onPlayClick.bind(this);\r\n    this.onPasteTextClick = this.onPasteTextClick.bind(this);\r\n    this.onSingSongClick = this.onSingSongClick.bind(this);\r\n    this.onGuessByTextClick = this.onGuessByTextClick.bind(this);\r\n    this.onGuessBySingClick = this.onGuessBySingClick.bind(this);\r\n    this.onCorrectAnswer = this.onCorrectAnswer.bind(this);\r\n    this.onIncorrectAnswer = this.onIncorrectAnswer.bind(this);\r\n\r\n    this.tracks = [];\r\n    this.numberOfAttempt = 5;\r\n    this.isAudioMode = true;\r\n\r\n    this.state = {\r\n      record: false,\r\n      showPlayButton: \"\",\r\n      showSingOrPasteButtons: \"hidden\",\r\n      showTextArea: \"hidden\",\r\n      computerPoints: 0,\r\n      userPoints: 0,\r\n      showAnswer: \"hidden\",\r\n      lyricResponce: {},\r\n      attempt: 1,\r\n      textareaMessage: `Paste text of the song! This is my 1 attempt out of ${this.numberOfAttempt}.`,\r\n      showListOfSongs: \"hidden\",\r\n      showAudio: \"hidden\"\r\n    };\r\n  }\r\n\r\n  mouseEnter() {\r\n    TweenLite.to(this.circleButton, 0.5, { scale: 1.2 });\r\n  }\r\n\r\n  onPlayClick() {\r\n    this.tracks = [];\r\n    this.setState({\r\n      showPlayButton: \"hidden\",\r\n      showSingOrPasteButtons: \"\",\r\n      showListOfSongs: \"hidden\"\r\n    });\r\n  }\r\n\r\n  onPasteTextClick() {\r\n    this.isAudioMode = false;\r\n    this.setState({\r\n      showSingOrPasteButtons: \"hidden\",\r\n      showTextArea: \"\",\r\n      textareaMessage: `Paste text of the song! This is my 1 attempt out of ${this.numberOfAttempt}.`\r\n    });\r\n  }\r\n\r\n  onSingSongClick() {\r\n    this.isAudioMode = true;\r\n    this.setState({\r\n      showSingOrPasteButtons: \"hidden\",\r\n      showAudio: \"\",\r\n      textareaMessage: `Paste text of the song! This is my 1 attempt out of ${this.numberOfAttempt}.`\r\n    });\r\n  }\r\n\r\n  async onGuessByTextClick(lyric) {\r\n    const song = await axios\r\n      .post(`${baseUrl}recognizer/recognizeByLyrics`, {\r\n        lyric: lyric\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    this.setState({\r\n      lyricResponce: song?.data,\r\n      showAnswer: \"\",\r\n      showTextArea: \"hidden\",\r\n    });\r\n\r\n    if (this.state.lyricResponce) {\r\n      this.tracks.push(this.state.lyricResponce.track_id);\r\n    }\r\n  }\r\n  async onGuessBySingClick(blob) {\r\n    let formData = new FormData();\r\n    const file = new File([blob], \"audio.mp3\");\r\n    formData.append(\"file\", file);\r\n    formData.append(\"file_type\", \"music\");\r\n    // console.log(file);\r\n    const headers = {\r\n      'Access-Control-Allow-Origin': '*'\r\n    };\r\n    const song = await axios.post(`${baseUrl}recognizer/upload_file`, formData, {\r\n      headers: headers\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // console.log(song);\r\n    this.setState({\r\n      lyricResponce: song?.data,\r\n      showAnswer: \"\",\r\n      showAudio: \"hidden\",\r\n    });\r\n\r\n    if (this.state.lyricResponce) {\r\n      this.tracks.push(this.state.lyricResponce.track_id);\r\n    }\r\n  }\r\n  mouseLeave() {\r\n    TweenLite.to(this.circleButton, 0.5, { scale: 1 });\r\n  }\r\n  componentDidMount() {\r\n    const col = new TimelineMax({});\r\n    col.to(this.circleButtonConture, 4.7, {\r\n      rotation: 360,\r\n      transformOrigin: \"50% 50%\",\r\n      ease: Power0.easeNone,\r\n      repeat: -1\r\n    });\r\n  }\r\n\r\n  onIncorrectAnswer() {\r\n    if (this.state.attempt === this.numberOfAttempt) {\r\n      const userPoints = this.state.userPoints + 1;\r\n      this.setState({\r\n        attempt: 1,\r\n        userPoints: userPoints,\r\n        showPlayButton: \"\",\r\n        showAnswer: \"hidden\",\r\n        showListOfSongs: \"\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    let showTextArea = \"\";\r\n    let showAudio = \"\";\r\n    if (this.isAudioMode) {\r\n      showTextArea = \"hidden\"\r\n    } else {\r\n      showAudio = \"hidden\";\r\n    }\r\n\r\n    const attempt = this.state.attempt + 1;\r\n    this.setState({\r\n      attempt: attempt,\r\n      textareaMessage: `Let's try again! This is my ${attempt} attempt out of ${this.numberOfAttempt}.`,\r\n      showTextArea: showTextArea,\r\n      showAudio: showAudio,\r\n      showAnswer: \"hidden\",\r\n      showListOfSongs: \"hidden\"\r\n    });\r\n  }\r\n  onCorrectAnswer() {\r\n    const computerPoints = this.state.computerPoints + 1;\r\n    this.setState({\r\n      attempt: 1,\r\n      computerPoints: computerPoints,\r\n      showPlayButton: \"\",\r\n      showAnswer: \"hidden\",\r\n      showListOfSongs: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const isLastAttempt = this.state.attempt === this.numberOfAttempt;\r\n    return (\r\n      <div className=\"game\">\r\n        <Score\r\n          first={this.state.userPoints}\r\n          second={this.state.computerPoints}\r\n        />\r\n        <Playlist hidden={this.state.showListOfSongs} tracks={this.tracks} />\r\n        <Answer\r\n          hidden={this.state.showAnswer}\r\n          onCorrectAnswer={this.onCorrectAnswer}\r\n          onIncorrectAnswer={this.onIncorrectAnswer}\r\n          lyric={this.state.lyricResponce}\r\n          isLast={isLastAttempt} />\r\n\r\n        <div className={\"singOrPaste \" + this.state.showSingOrPasteButtons}>\r\n          <button onClick={this.onSingSongClick}>Sing song</button>\r\n          <button onClick={this.onPasteTextClick}>Paste text</button>\r\n        </div>\r\n        <AudioRecorder\r\n          hidden={this.state.showAudio}\r\n          goClick={this.onGuessBySingClick}\r\n        />\r\n        <PasteText\r\n          hidden={this.state.showTextArea}\r\n          message={this.state.textareaMessage}\r\n          goClick={this.onGuessByTextClick} />\r\n\r\n\r\n        <div\r\n          className={\"conteinerbodywithanim \" + this.state.showPlayButton}\r\n          onMouseEnter={this.mouseEnter}\r\n          onMouseLeave={this.mouseLeave}\r\n          onClick={this.onPlayClick}\r\n          ref={div => (this.circleButton = div)}\r\n        >\r\n          <div className=\"play\">\r\n            <p>play</p>\r\n          </div>\r\n          <img\r\n            className=\"playButtonConture\"\r\n            src={playButtonConture}\r\n            alt=\"Play button\"\r\n            ref={img => (this.circleButtonConture = img)}\r\n          />\r\n        </div>\r\n\r\n\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/layout/Header\";\r\nimport Footer from \"./components/layout/Footer\";\r\nimport Game from \"./components/game/Game\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div style={{ backgroundColor: \"black\" }}>\r\n        <Game />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}